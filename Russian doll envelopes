class Solution {
    public int maxEnvelopes(int[][] envelopes) {
        // Step 1: Sort envelopes
        Arrays.sort(envelopes, (a, b) -> {
            if (a[0] == b[0]) {
                return b[1] - a[1]; // Sort by height in descending order if widths are the same
            }
            return a[0] - b[0]; // Sort by width in ascending order
        });

        // Step 2: Find LIS based on heights
        int[] dp = new int[envelopes.length];
        int length = 0;

        for (int[] envelope : envelopes) {
            int height = envelope[1];
            int index = Arrays.binarySearch(dp, 0, length, height);
            if (index < 0) {
                index = -(index + 1); // Find the correct position to replace
            }
            dp[index] = height;
            if (index == length) {
                length++;
            }
        }

        return length;
    }
